{"version":3,"sources":["reportWebVitals.ts","components/home.tsx","components/navbar.tsx","components/archive.tsx","components/about.tsx","components/footer.tsx","components/article.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","useState","archiveList","setArchiveList","useEffect","fetch","ret","json","obj","className","slice","map","latestArticleMetadata","to","filename","title","preamble","Navbar","path","page","Archive","style","display","flexDirection","articleMetadata","color","About","Footer","Article","params","useParams","articleContent","setArticleContent","process","res","text","content","children","Main","element","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCHC,SAASQ,IACpB,MAAwCC,mBAA4B,IAApE,mBAAQC,EAAR,KAAqBC,EAArB,KAQA,OANAC,qBAAU,WACNC,MAAM,kCACDX,MAAK,SAAAY,GAAG,OAAIA,EAAIC,UAChBb,MAAK,SAAAc,GAAG,OAAIL,EAAeK,QACjC,IAGC,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,WAAf,SAEQP,EAAYQ,MAAM,EAAG,GAAGC,KAAI,SAACC,GACzB,OACI,cAAC,IAAD,CAAMH,UAAU,eAAeI,GAAI,YAAcD,EAAsBE,SAAvE,SACI,gCACI,6BAAKF,EAAsBG,QAC3B,4BAAIH,EAAsBI,uB,MCpB/C,SAASC,IAepB,OACI,sBAAKR,UAAU,SAAf,UACI,8BAhBI,CACR,CACIS,KAAM,IACNC,KAAM,QAEV,CACID,KAAM,WACNC,KAAM,WAEV,CACID,KAAM,SACNC,KAAM,UAMKR,KAAI,SAACQ,GACR,OACI,cAAC,IAAD,CAAMN,GAAIM,EAAKD,KAAMT,UAAU,cAA/B,SACI,6BAAKU,EAAKA,cAK1B,qBAAKV,UAAU,MAAf,SACI,8CCpBD,SAASW,IACpB,MAAwCnB,mBAA4B,IAApE,mBAAQC,EAAR,KAAqBC,EAArB,KAQA,OANAC,qBAAU,WACNC,MAAM,kCACDX,MAAK,SAAAY,GAAG,OAAIA,EAAIC,UAChBb,MAAK,SAAAc,GAAG,OAAIL,EAAeK,QACjC,IAGC,sBAAKC,UAAU,UAAf,UACI,yCACA,qBAAKY,MAAO,CAACC,QAAS,OAAQC,cAAe,UAA7C,SACKrB,EAAYS,KAAI,SAACa,GACd,OAAO,cAAC,IAAD,CAAMX,GAAI,YAAcW,EAAgBV,SAAUO,MAAO,CAACI,MAAO,SAAjE,SAA4ED,EAAgBT,gBCzBxG,SAASW,IACpB,OACI,8BACI,yC,MCAG,SAASC,IACpB,OACI,wBAAQlB,UAAU,W,YCCX,SAASmB,IACpB,IAAMC,EAASC,cACf,EAA8C7B,mBAAS,IAAvD,mBAAQ8B,EAAR,KAAwBC,EAAxB,KAUA,OAPA5B,qBAAU,WACNC,MARY4B,sBAQQJ,EAAOd,OACtBrB,MAAK,SAACwC,GAAD,OAASA,EAAIC,UAClBzC,MAAK,SAAA0C,GAAO,OAAIJ,EAAkBI,QACxC,CAACP,IAIA,8BACI,cAAC,IAAD,CAAeQ,SAAUN,M,MCNrC,SAASO,IACP,OACE,sBAAK7B,UAAU,OAAf,UACE,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAACQ,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIqB,QAAS,cAACvC,EAAD,MACzB,cAAC,IAAD,CAAOkB,KAAK,WAAWqB,QAAS,cAACnB,EAAD,MAChC,cAAC,IAAD,CAAOF,KAAK,SAASqB,QAAS,cAACb,EAAD,MAC9B,cAAC,IAAD,CAAOR,KAAK,kBAAkBqB,QAAS,cAACX,EAAD,cAI7C,cAACD,EAAD,OAKNa,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.4f5400b3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { articleMetaData } from \"./archive\"\r\n\r\nimport \"./home.css\"\r\n\r\nexport default function Home() {\r\n    const [ archiveList, setArchiveList ] = useState<articleMetaData[]>([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/articles/articleMetaData.json\")\r\n            .then(ret => ret.json())\r\n            .then(obj => setArchiveList(obj))\r\n    }, [])\r\n\r\n    return (\r\n        <div className='Home'>\r\n            <div className=\"Featured\">\r\n                {\r\n                    archiveList.slice(0, 4).map((latestArticleMetadata) => {\r\n                        return (\r\n                            <Link className=\"FeaturedItem\" to={\"/article/\" + latestArticleMetadata.filename}>\r\n                                <div>\r\n                                    <h2>{latestArticleMetadata.title}</h2>\r\n                                    <p>{latestArticleMetadata.preamble}</p>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {  Link  } from \"react-router-dom\";\r\n\r\nimport \"./navbar.css\"\r\n\r\nexport default function Navbar() {\r\n    let pages = [\r\n        {\r\n            path: \"/\",\r\n            page: \"Home\"\r\n        },\r\n        {\r\n            path: \"/archive\",\r\n            page: \"Archive\"\r\n        },\r\n        {\r\n            path: \"/about\",\r\n            page: \"About\"\r\n        }\r\n    ]\r\n    return (\r\n        <div className=\"Navbar\">\r\n            <div>\r\n                {pages.map((page) => {\r\n                    return (\r\n                        <Link to={page.path} className=\"SectionLink\">\r\n                            <h2>{page.page}</h2>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"Geo\">\r\n                <h2>GeoBlog</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport type articleMetaData = {\r\n    filename: string,\r\n    author: string,\r\n    timestamp: number,\r\n    title: string,\r\n    preamble: string\r\n}\r\n\r\nexport default function Archive() {\r\n    const [ archiveList, setArchiveList ] = useState<articleMetaData[]>([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"/articles/articleMetaData.json\")\r\n            .then(ret => ret.json())\r\n            .then(obj => setArchiveList(obj))\r\n    }, [])\r\n\r\n    return (\r\n        <div className='archive'>\r\n            <h1>Archive</h1>\r\n            <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                {archiveList.map((articleMetadata) => {\r\n                    return <Link to={\"/article/\" + articleMetadata.filename} style={{color: \"white\"}}>{articleMetadata.title}</Link>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n};","export default function About() {\r\n    return (\r\n        <div>\r\n            <h1>About</h1>\r\n        </div>\r\n    )\r\n};","\r\nimport \"./footer.css\"\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"Footer\">\r\n\r\n        </footer>\r\n    )\r\n}","import ReactMarkdown from \"react-markdown\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst articlesDir = process.env.PUBLIC_URL + \"/articles/\"\r\n\r\nexport default function Article() {\r\n    const params = useParams()\r\n    const [ articleContent, setArticleContent ] = useState(\"\")\r\n\r\n    // Grab the content for the article as a markdown string\r\n    useEffect(() => {\r\n        fetch(articlesDir + params.title)\r\n            .then((res) => res.text())\r\n            .then(content => setArticleContent(content))\r\n    }, [params])\r\n\r\n    // Pass that to ReactMarkdown which renders it as HTML / react component\r\n    return (\r\n        <div>\r\n            <ReactMarkdown children={articleContent}/>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\"\r\n\r\nimport Home from \"./components/home\";\r\nimport Navbar from \"./components/navbar\";\r\nimport Archive from './components/archive';\r\nimport About from './components/about';\r\nimport Footer from './components/footer';\r\nimport Article from './components/article';\r\n\r\nimport \"./index.css\"\r\n\r\nfunction Main() {\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"Content\">\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <Routes>\r\n            <Route path='/' element={<Home />} />\r\n            <Route path='/archive' element={<Archive />} />\r\n            <Route path='/about' element={<About />} />\r\n            <Route path='/article/:title' element={<Article />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n    <Main />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}